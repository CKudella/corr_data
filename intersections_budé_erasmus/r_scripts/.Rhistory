# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# plot graph
plot(network, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=4, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# plot graph
plot(network, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=1, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# plot graph
plot(network, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_in_circle(network)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_in_circle(network)
# plot graph
plot(network, layout=l, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_kk(network)
# plot graph
plot(network, layout=l, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(readr)
require(lubridate)
require(rgexf)
require(igraph)
library(readr)
library(lubridate)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
install.packages("extrafont")
font_import()
library("extrafont", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
font_import()
fonts()
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, family="Roboto Black" vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, family="Roboto Black", vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, family="Roboto Black", vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=0, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=0, vertex.frame.color="red", vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=0, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)*1.5
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=0, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=0, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# calculate in-degree of nodes
deg <- degree(net, mode="in")
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=deg*3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# calculate in-degree of nodes
deg <- degree(network, mode="in")
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=deg*3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# calculate in-degree of nodes
deg <- degree(network, mode="all")
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=deg*3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
edge_density(network, loops=F)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# calculate in-degree of nodes
deg <- degree(network)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=deg*3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=deg*3, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_fr(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_kw(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_kk(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_graphopt(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_with_graphopt(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
require(rgexf)
require(extrafont)
require(igraph)
library(extrafont)
library(rgexf)
library(igraph)
loadfonts()
# set working directory
getwd()
setwd("../network_data/")
# read data for mutual correspondents
network_epp_by_era<-read.gexf("epp_sent_by_budé_mut_corr_era_budé_forcelayout_indegree_gephi092.gexf")
# convert gefx to igraph
network <- gexf.to.igraph(network_epp_by_era)
# define layout
l <- layout_nicely(network)
# plot graph
plot(network, layout=l, vertex.label.family="Roboto Black", vertex.size=2, vertex.label=V(network)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(network)$weight)
