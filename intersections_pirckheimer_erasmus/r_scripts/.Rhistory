plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net2)^3)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net2)^5)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net2)^5, area=vcount(net2)^2.4))
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net2)^5, area=vcount(net2)^2.4)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net2)^5, area=vcount(net2)^2.4)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_kk(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_spirng(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_spring(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l*2, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
cut.off <- mean(links$weight)
net2 <- delete.edges(net2, E(net2)[weight<cut.off])
l <- layout.fruchterman.reingold(net2, repulserad=vcount(net)^2.1)
plot(net2, layout=l)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net)^2.1)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net)^50.1)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight, repulserad=vcount(net)^500)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
require(readr)
require(igraph)
require(rgexf)
library(readr)
library(igraph)
library(rgexf)
# set working directory
getwd()
setwd("../query_results/")
# read node and edges into dataframe with the name expected by igraph
nodes <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_nodes_locations_for_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
links <- read.csv("create_geolayout_files_for_gephi_mut_corr_era_pirck/nodes_edges_for_epp_sent_by_era_mut_corr_era_pirck/create_edges_epp_sent_by_era_mut_corr_era_pirck.csv", fileEncoding="UTF-8")
#assign edge weight
links$weight <- 1
# create graph
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
# simplify
net2 <- simplify(net, remove.multiple = TRUE, edge.attr.comb=list(weight="sum","ignore"))
# layout with FR
l <- layout_with_fr(net2, weights=E(net2)$weight)
# plot graph
plot(net2, layout=l*5, vertex.size=1, vertex.label=V(net2)$locations_name_modern, vertex.label.font=2, vertex.label.color="gray40",
vertex.label.cex=.7, edge.color="gray85", edge.arrow.size=.2, edge.width=E(net2)$weight)
