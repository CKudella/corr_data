-- MySQL Script generated by MySQL Workbench
-- 10/07/16 20:04:36
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bude_cdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bude_cdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bude_cdb` DEFAULT CHARACTER SET utf8 ;
USE `bude_cdb` ;

-- -----------------------------------------------------
-- Table `bude_cdb`.`locations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bude_cdb`.`locations` (
  `locations_id` VARCHAR(90) NOT NULL COMMENT 'This column carries the primary key for the table that is also being used as a foreign key for ‘source_loc_id’ and target_loc_id’ in the ‘letters’ table as well as ‘pob_loc_id’ and ‘pod_loc_id’ in the ‘correspondents’ table. ',
  `geonames_id` VARCHAR(90) NULL COMMENT 'This column carries the numeric Geonames ID. For locations for which no Geonames ID is available, the value should be set to “unknown”.',
  `wikidata_id` VARCHAR(45) NULL COMMENT 'This column carries the alphanumeric identifier provided by Wikidata.',
  `emlo_location_id` VARCHAR(100) NULL COMMENT 'This column carries the alphanumeric identifier provided by EMLO.',
  `locations_name_modern` VARCHAR(90) NULL COMMENT 'This column carries the toponym of the location as specified by Geonames.',
  `locations_name_in_edition` VARCHAR(90) NULL COMMENT 'This column carries the name of the location as it appears in the source used for the capturing of the letter’s metadata.',
  `locations_modern_state` VARCHAR(90) NULL COMMENT 'This column carries the name of the modern state the location is situated in as provided by Geonames.',
  `locations_modern_province` VARCHAR(90) NULL COMMENT 'This column carries the name of the modern province of the state the location is situated in as provided by Geonames.',
  `locations_lat` DOUBLE NULL COMMENT 'This column carries the latitude element of the geographic coordinates of the location as provided by Geonames.',
  `locations_lng` DOUBLE NULL COMMENT 'This column carries the longitude element of the geographic coordinates of the location as provided by Geonames.',
  `locations_ll_combined` VARCHAR(90) NULL COMMENT 'This column carries the geographic coordinates of the location according to WGS 84 specifications as provided by Geonames.',
  `locations_further_annotation` VARCHAR(200) NULL COMMENT 'This column can carry information on the identification of the place in Geonames and similar information.',
  PRIMARY KEY (`locations_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bude_cdb`.`correspondents`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bude_cdb`.`correspondents` (
  `correspondents_id` VARCHAR(200) NOT NULL COMMENT 'This column carries the primary key for the table',
  `type` VARCHAR(45) NULL COMMENT 'This column classifies the correspondent by the following taxonomy: (1) individual (2) corporate body (3) group.',
  `gender` VARCHAR(45) NULL COMMENT 'This column classifies the gender of the correspondent if applicable. For corporate bodies and groups, this column contains the value ‘not applicable’.',
  `viaf_id` VARCHAR(45) NULL COMMENT 'This column carries the numeric identifier provided by VIAF. For corporate bodies and groups, this column contains the value ‘not applicable’.',
  `wikidata_id` VARCHAR(45) NULL COMMENT 'This column carries the alphanumeric identifier provided by Wikidata.',
  `gnd_id` VARCHAR(45) NULL COMMENT 'This column carries the alphanumeric identifier provided by GND.',
  `cerl_id` VARCHAR(45) NULL COMMENT 'This column carries the alphanumeric identifier provided by CERL Thesaurus.',
  `emlo_person_id` VARCHAR(100) NULL COMMENT 'This column carries the alphanumeric identifier provided by EMLO.',
  `name_in_edition` VARCHAR(900) NULL COMMENT 'This column carries the name of the correspondent as it appears in the edition that has been used to capture the dataset of the individual corpus of correspondence. If multiple entries in this column are necessary because multiple editions have been used ' /* comment truncated */ /*as the source for the dataset, these entries are separated by an “ // “ as a delimiter an each escaped with an “[[Name of Edition]]”.*/,
  `known_name_variations` VARCHAR(500) NULL COMMENT 'This column carries name variations that are provided by biographic handbooks such as ‘Contemporaries of Erasmus’ as well as in authority file records such as the ‘Gemeinsame Normdatei’ (GND), which in turn are accessible via the VIAF ID.',
  `known_name_variations_ref` VARCHAR(200) NULL COMMENT 'This column carries a reference to the source of the information contained in known_name_variations. For printed sources, this follows the schema [Name of Work], [Page or Page Range]. For authority file records, only the abbreviation of the authority' /* comment truncated */ /* is recorded, e.g. ‘GND’.*/,
  `pob_loc_id` VARCHAR(90) NULL COMMENT 'This column carries the primary key of the locations table as a foreign key for the place of birth of the individual correspondent. ',
  `pob_loc_annotation` VARCHAR(90) NULL COMMENT 'This column carries the name of the place of birth as it appears in the source of this information.',
  `pob_loc_annotation_ref` VARCHAR(200) NULL COMMENT 'This column carries a reference to the source of the information contained in pob_loc_annotation. For printed sources, this follows the schema [Name of Work],[Page or Page Range]. For authority file records, only the abbreviation of the authority is' /* comment truncated */ /* recorded, e.g. ‘GND’.*/,
  `dob_year1` VARCHAR(4) NULL COMMENT 'This column carries the year of birth of the individual correspondent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `dob_month1` VARCHAR(2) NULL COMMENT 'This column carries the month of birth of the individual correspondent in the two-digit format (MM) according to the ISO 8601 specification.',
  `dob_day1` VARCHAR(2) NULL COMMENT 'This column carries the day of birth of the individual correspondent in the two-digit format (DD) according to the ISO 8601 specification.',
  `dob_computable1` DATE NULL COMMENT 'This column carries the date of birth of the individual correspondent in the YYYY-MM-DD format according to the ISO 8601 specification.',
  `dob_has_range` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the date of birth of the individual correspondent has a date range, i.e. if the date of birth is/can be narrowed down to a specific day or not.',
  `dob_year2` VARCHAR(4) NULL COMMENT 'This column carries the year of birth of the individual correspondent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `dob_month2` VARCHAR(2) NULL COMMENT 'This column carries the month of birth of the individual correspondent in the two-digit format (MM) according to the ISO 8601 specification.',
  `dob_day2` VARCHAR(2) NULL COMMENT 'This column carries the day of birth of the individual correspondent in the two-digit format (DD) according to the ISO 8601 specification.',
  `dob_computable2` DATE NULL COMMENT 'This column carries the date of birth of the individual correspondent in the YYYY-MM-DD format according to the ISO 8601 specification.',
  `dob_annotation` VARCHAR(200) NULL COMMENT 'This column carries the date of birth as it appears in the source of this information.',
  `dob_annotation_ref` VARCHAR(200) NULL COMMENT 'This column carries a reference to the source of the information contained in dob_annotation.',
  `pod_loc_id` VARCHAR(90) NULL COMMENT 'This column carries the primary key of the locations table as a foreign key for the place of birth of the individual correspondent.',
  `pod_loc_annotation` VARCHAR(200) NULL COMMENT 'This column carries the place of death as it appears in the source of this information.',
  `pod_loc_annotation_ref` VARCHAR(200) NULL COMMENT 'This column carries a reference to the source of the information contained in pod_loc_annotation.',
  `dod_year1` VARCHAR(4) NULL COMMENT 'This column carries the year of death of the individual correspondent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `dod_month1` VARCHAR(2) NULL COMMENT 'This column carries the month of death of the individual correspondent in the two-digit format (MM) according to the ISO 8601 specification.',
  `dod_day1` VARCHAR(2) NULL COMMENT 'This column carries the day of death of the individual correspondent in the two-digit format (DD) according to the ISO 8601 specification.',
  `dod_computable1` DATE NULL COMMENT 'This column carries the date of death of the individual correspondent in the YYYY-MM-DD format according to the ISO 8601 specification.',
  `dod_has_range` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the date of death of the individual correspondent has a date range, i.e. if the date of birth is/can be narrowed down to a specific day or not.',
  `dod_year2` VARCHAR(4) NULL COMMENT 'This column carries the year of death of the individual correspondent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `dod_month2` VARCHAR(2) NULL COMMENT 'This column carries the month of death of the individual correspondent in the two-digit format (MM) according to the ISO 8601 specification.',
  `dod_day2` VARCHAR(2) NULL COMMENT 'This column carries the day of death of the individual correspondent in the two-digit format (DD) according to the ISO 8601 specification.',
  `dod_computable2` DATE NULL COMMENT 'This column carries the date of death of the individual correspondent in the YYYY-MM-DD format according to the ISO 8601 specification.',
  `dod_annotation` VARCHAR(90) NULL COMMENT 'This column carries a reference to the source of the information contained in dod_annotation.',
  `dod_annotation_ref` VARCHAR(200) NULL COMMENT 'This Column holds the bibliographic reference for the text in dod_annotation',
  `further_annotation` VARCHAR(900) NULL COMMENT 'This column carries additional notes that are relevant to the capturing of data on this correspondent.',
  PRIMARY KEY (`correspondents_id`),
  INDEX `fk_persons_groups_bodies_locations1_idx` (`pob_loc_id` ASC),
  INDEX `fk_persons_groups_bodies_locations2_idx` (`pod_loc_id` ASC),
  CONSTRAINT `fk_persons_groups_bodies_locations1`
    FOREIGN KEY (`pob_loc_id`)
    REFERENCES `bude_cdb`.`locations` (`locations_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_persons_groups_bodies_locations2`
    FOREIGN KEY (`pod_loc_id`)
    REFERENCES `bude_cdb`.`locations` (`locations_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bude_cdb`.`letters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bude_cdb`.`letters` (
  `letters_id` VARCHAR(45) NOT NULL COMMENT 'This column carries the primary key for the table.',
  `letter_no_in_edition` VARCHAR(200) NULL COMMENT 'This column carries the sequential alphanumerical identifier(s) of a letter in the edition(s) followed by an abbreviation of the edition the identifiers refers to.',
  `sender_id` VARCHAR(200) NULL COMMENT 'This column carries the primary key of the ‘correspondents’ table as a foreign key for the sender of the letter. This does not only enable the identification of correspondents independently of the spelling in/between edition(s) but also allows for que' /* comment truncated */ /*ries that aim at attributes stored in the ‘correspondents’ table.*/,
  `sender_as_marked` VARCHAR(500) NULL COMMENT 'This column carries the name of the letter’s sender as it has been marked in the edition that has been the source for the capturing of the metadata for the individual letter. ',
  `sender_inferred` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the sender of a letter has been inferred by the editors of the source that has been used to capture the metadata on the individual letter.',
  `sender_uncertain` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the editors of the source material have indicated that there is a degree of uncertainty with regard to the sender of the letter.',
  `recipient_id` VARCHAR(200) NULL COMMENT 'This column carries the primary key of the ‘correspondents’ table as a foreign key for the recipient of the letter',
  `recipient_as_marked` VARCHAR(500) NULL COMMENT 'This column carries the name of the letter’s recipient as it has been marked in the edition that has been the source for the capturing of the metadata for the individual letter.',
  `recipient_inferred` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the recipient of a letter has been inferred by the editors of the source that has been used to capture the metadata on the individual letter.',
  `recipient_uncertain` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the editors of the source material have indicated that there is a degree of uncertainty with regard to the recipient of the letter.',
  `label` VARCHAR(500) NULL COMMENT 'This column carries the individual row of a letter as it appears in the list of letters that many editions provide. In cases where such lists are not available, this column carries the ‘header’ of the individual letter as it appears in the edition tha' /* comment truncated */ /*t has been used to capture the metadata.*/,
  `send_date_year1` VARCHAR(4) NULL COMMENT 'This column carries the year the individual letter has been sent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `send_date_month1` VARCHAR(2) NULL COMMENT 'This column carries the month the individual letter has been sent in the two-digit format (MM) according to the ISO 8601 specification.',
  `send_date_day1` VARCHAR(2) NULL COMMENT 'This column carries the day the individual letter has been sent in the two-digit format (DD) according to the ISO 8601 specification',
  `send_date_computable1` DATE NULL COMMENT 'This column carries the date of dispatch of the individual letter in the YYYY-MM-DD format according to the ISO 8601 specification.',
  `send_date_has_range` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the individual letter has a date range, i.e. if it’s dating is/can be narrowed down to a specific day or not.',
  `send_date_year2` VARCHAR(4) NULL COMMENT 'This column carries the year the individual letter has been sent in the four-digit format (YYYY) according to the ISO 8601 specification.',
  `send_date_month2` VARCHAR(2) NULL COMMENT 'This column carries the month the individual letter has been sent in the two-digit format (MM) according to the ISO 8601 specification.',
  `send_date_day2` VARCHAR(2) NULL COMMENT 'This column carries the month the individual letter has been sent in the two-digit format (DD) according to the ISO 8601 specification.',
  `send_date_computable2` DATE NULL COMMENT 'This column carries the date of dispatch of the individual letter in the YYYY-MM-DD format according to the ISO 8601 specification (cf. send_date_computable1).',
  `send_date_as_marked` VARCHAR(200) NULL COMMENT 'This column carries the date specification of the individual letter as it appears in the list of letters that many editions provide. In cases where such lists are not available, this column carries the date specification as it appears in the ‘header’ ' /* comment truncated */ /*of the individual letter in the edition that has been used to capture the metadata.*/,
  `send_date_inferred` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the date of dispatch of a letter has been inferred by the editors of the source that has been used to capture the metadata on the individual letter. ',
  `send_date_approx` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the date of dispatch of a letter has been marked by the editors of the source material as an approximation.',
  `send_date_uncertain` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the date of dispatch of a letter has been marked by the editors of the source material as uncertain.',
  `source_loc_id` VARCHAR(90) NULL COMMENT 'This column carries the primary key of the ‘locations’ table as a foreign key for the location from where the letter has been dispatched.',
  `source_loc_as_marked` VARCHAR(200) NULL COMMENT 'This column carries the location from where the individual letter has been dispatched as it appears in the list of letters that many editions provide. ',
  `source_loc_inferred` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the location of dispatch of a letter has been inferred by the editors of the source that has been used to capture the metadata on the individual letter. ',
  `source_loc_uncertain` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the editors of the source material have indicated that there is a degree of uncertainty with regard to the location of dispatch of the letter.',
  `target_loc_id` VARCHAR(90) NULL COMMENT 'This column carries the primary key of the ‘locations’ table as a foreign key for the location to which the letter has been dispatched to.',
  `target_loc_as_marked` VARCHAR(200) NULL COMMENT 'This column carries the location to which the individual letter has been dispatched to (cf. source_loc_as_marked).',
  `target_loc_inferred` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the location to which a letter has been dispatched to has been inferred by the editors of the source that has been used to capture the metadata on the individual letter .',
  `target_loc_uncertain` TINYINT(1) NULL COMMENT 'This column carries a Boolean operator (1 or 0) that indicates if the editors of the source material have indicated that there is a degree of uncertainty with regard to the location of dispatch of the letter.',
  `letter_language` VARCHAR(45) NULL COMMENT 'This column carries the language(s) the individual letter has been written in. If a letter contains multiple languages in equal parts, the language denominations are separated by a “//” as delimiter.',
  `letter_type_genus` VARCHAR(45) NULL COMMENT 'This column carries a classification of the letter according to the following taxonomy: (1) familiar letter (2) dedicatory letter (3) prefatory letter. If a letter matches multiple criteria, the classifications are separated by a “//” as delimiter.',
  `letter_type_x_to_x` VARCHAR(45) NULL COMMENT 'This column carries information of the type of epistolary exchange. ‘letter_1_to_1’ denotes an exchange between two individuals, whereas ‘letter_1_to_n’ and its inverse signify letters with multiple recipients or senders. ‘letter_n_to_n’ denot' /* comment truncated */ /*es that a letters was written from multiple senders to multiple recipients.*/,
  `further_annotation` VARCHAR(800) NULL COMMENT 'This column can be used to store notes that are relevant to capturing of the individual letter, e.g. a reference to an article in which the letter has been published (for those cases where a letter hasn’t been published also in an edition).',
  PRIMARY KEY (`letters_id`),
  INDEX `fk_letters_correspondents1_idx` (`sender_id` ASC),
  INDEX `fk_letters_correspondents2_idx` (`recipient_id` ASC),
  INDEX `fk_letters_locations1_idx` (`source_loc_id` ASC),
  INDEX `fk_letters_locations2_idx` (`target_loc_id` ASC),
  CONSTRAINT `fk_letters_correspondents1`
    FOREIGN KEY (`sender_id`)
    REFERENCES `bude_cdb`.`correspondents` (`correspondents_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_letters_correspondents2`
    FOREIGN KEY (`recipient_id`)
    REFERENCES `bude_cdb`.`correspondents` (`correspondents_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_letters_locations1`
    FOREIGN KEY (`source_loc_id`)
    REFERENCES `bude_cdb`.`locations` (`locations_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_letters_locations2`
    FOREIGN KEY (`target_loc_id`)
    REFERENCES `bude_cdb`.`locations` (`locations_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
