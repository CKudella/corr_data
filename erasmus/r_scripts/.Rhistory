#  facet_grid (. ~ start_year)
# plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# set start_year as factor
data$start_year <-as.factor(data$start_year)
boxplot <-boxplot(start_year~duration_in_years, data=data)
# create potblox with facet grid for years
# plot <- ggplot(data, aes(x= ' ', y = duration_in_years)) +
#  geom_boxplot(fill='#363633', notch = FALSE) +
#  stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
#  geom_text(aes(label=ifelse((y>4*IQR(x)|x>4*IQR(y)),label,"")), hjust=1.1) +
#  facet_grid (. ~ start_year)
# plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
boxplot <-boxplot(start_year~duration_in_years, data=data)
# create potblox with facet grid for years
# plot <- ggplot(data, aes(x= ' ', y = duration_in_years)) +
#  geom_boxplot(fill='#363633', notch = FALSE) +
#  stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
#  geom_text(aes(label=ifelse((y>4*IQR(x)|x>4*IQR(y)),label,"")), hjust=1.1) +
#  facet_grid (. ~ start_year)
# plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
boxplot <-boxplot(duration_in_years~start_year, data=data)
# create potblox with facet grid for years
# plot <- ggplot(data, aes(x= ' ', y = duration_in_years)) +
#  geom_boxplot(fill='#363633', notch = FALSE) +
#  stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
#  geom_text(aes(label=ifelse((y>4*IQR(x)|x>4*IQR(y)),label,"")), hjust=1.1) +
#  facet_grid (. ~ start_year)
# plot
boxplot$out
boxplot.stats()$out
boxplot.stats(data)$out
outlierKD <- function(data, duration_in_years) {
var_name <- eval(substitute(var),eval(dt))
na1 <- sum(is.na(var_name))
m1 <- mean(var_name, na.rm = T)
par(mfrow=c(2, 2), oma=c(0,0,3,0))
boxplot(var_name, main="With outliers")
hist(var_name, main="With outliers", xlab=NA, ylab=NA)
outlier <- boxplot.stats(var_name)$out
mo <- mean(outlier)
var_name <- ifelse(var_name %in% outlier, NA, var_name)
boxplot(var_name, main="Without outliers")
hist(var_name, main="Without outliers", xlab=NA, ylab=NA)
title("Outlier Check", outer=TRUE)
na2 <- sum(is.na(var_name))
cat("Outliers identified:", na2 - na1, "n")
cat("Propotion (%) of outliers:", round((na2 - na1) / sum(!is.na(var_name))*100, 1), "n")
cat("Mean of the outliers:", round(mo, 2), "n")
m2 <- mean(var_name, na.rm = T)
cat("Mean without removing outliers:", round(m1, 2), "n")
cat("Mean if we remove outliers:", round(m2, 2), "n")
response <- readline(prompt="Do you want to remove outliers and to replace with NA? [yes/no]: ")
if(response == "y" | response == "yes"){
dt[as.character(substitute(var))] <- invisible(var_name)
assign(as.character(as.list(match.call())$dt), dt, envir = .GlobalEnv)
cat("Outliers successfully removed", "n")
return(invisible(dt))
} else{
cat("Nothing changed", "n")
return(invisible(var_name))
}
}
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(aes(label=ifelse((y>4*IQR(x)|x>4*IQR(y)),label,"")), hjust=1.1) +
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
geom_text(aes(label=ifelse((y>4*IQR(x)|x>4*IQR(y)),label,"")), hjust=1.1)
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) }) +
facet_grid (. ~ start_year)
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data %>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
dat$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
View(data_long)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data %>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
View(data)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- mtcars %>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data %>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
View(data)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data %>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
View(data)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data2 <- data%>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data2$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data%>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
View(data)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data%>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
data
str(data)
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# drop name_in_edition column
data <- subset(data, select = -c(name_in_edition) )
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data%>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
# create potblox with facet grid for years
plot <- ggplot(data, aes(x= start_year, y = duration_in_years)) +
geom_boxplot(fill='#363633', notch = FALSE) +
stat_summary(geom = "crossbar", width=0.65, fatten=0, color="white", fun.data = function(x){ return(c(y=median(x), ymin=median(x), ymax=median(x))) })
plot
data$start_year
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# drop name_in_edition column
data <- subset(data, select = -c(name_in_edition) )
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
require(readr)
require(lubridate)
library(require)
library(readr)
library(dplyr)
library(tibble)
library(lubridate)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("duration_of_correspondence/duration_of_correspodence_all_corr.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Beginning.of.correspondence.with.Erasmus"="Date","End.of.the.correspondence.with.Erasmus"="Date"))
# drop name_in_edition column
data <- subset(data, select = -c(name_in_edition) )
# calculate duration using lubridate
data$duration_in_years <- interval(data$Beginning.of.correspondence.with.Erasmus, data$End.of.the.correspondence.with.Erasmus) / years(1)
# extract start_year
data$start_year <- year(data$Beginning.of.correspondence.with.Erasmus)
# outlier function
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
data <- data%>% tibble::rownames_to_column(var="outlier") %>% group_by(start_year) %>% mutate(is_outlier=ifelse(is_outlier(duration_in_years), duration_in_years, as.numeric(NA)))
data$outlier[which(is.na(data$is_outlier))] <- as.numeric(NA)
head(data)
str(data)
