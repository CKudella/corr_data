library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_modern_state/comp_no_epp_from_era_to_ms_and_from_ms_to_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=Number.of.letters.sent.from.this.modern.state.to.Erasmus, y=Number.of.letters.Erasmus.sent.to.this.modern.state, label=ModernState)) +
geom_point(stat = "identity") +
geom_smooth(method = lm) +
labs(x="Number of letters sent from this modern state to Erasmus",y="Number of letters sent from Erasmus to this modern state") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = data$NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = data$NoCorrFromEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), shape = data$NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), shape = data$NoCorrFromEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(dplyr)
require(ggplot2)
library(readr)
library(dplyr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_era_outliers.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# callculate median for label
data_meds <- ddply(data, .(locations_name_modern), summarise, med = median(COUNT))
# create boxplot
plot <- ggplot(data, aes(x = locations_name_modern, y = COUNT)) +
geom_boxplot(notch = FALSE) +
geom_text(data = data_meds, aes(x = locations_name_modern, y = med, label = med), size = 3, vjust = -0.5) +
labs(x="Outlier Location", y =" Number of letters sent from this location to Erasmus per year") +
theme_bw()
plot
require(readr)
require(dplyr)
require(plyr)
require(ggplot2)
library(readr)
library(dplyr)
library(plyr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_era_outliers.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# callculate median for label
data_meds <- ddply(data, .(locations_name_modern), summarise, med = median(COUNT))
# create boxplot
plot <- ggplot(data, aes(x = locations_name_modern, y = COUNT)) +
geom_boxplot(notch = FALSE) +
geom_text(data = data_meds, aes(x = locations_name_modern, y = med, label = med), size = 3, vjust = -0.5) +
labs(x="Outlier Location", y =" Number of letters sent from this location to Erasmus per year") +
theme_bw()
plot
require(readr)
require(dplyr)
require(plyr)
require(ggplot2)
library(readr)
library(dplyr)
library(plyr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_era_outliers.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# callculate median for label
data_meds <- ddply(data, .(locations_name_modern), summarise, med = median(COUNT))
# create boxplot
plot <- ggplot(data, aes(x = locations_name_modern, y = COUNT)) +
geom_boxplot(notch = FALSE) +
geom_text(data = data_meds, aes(x = locations_name_modern, y = med, label = med), size = 3, vjust = -0.5) +
labs(x="Outlier Location", y =" Number of letters sent from this location to Erasmus per year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35))
plot
require(readr)
require(plyr)
require(ggplot2)
library(readr)
library(plyr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_era_outliers.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# callculate median for label
data_meds <- ddply(data, .(locations_name_modern), summarise, med = median(COUNT))
# create boxplot
plot <- ggplot(data, aes(x = locations_name_modern, y = COUNT)) +
geom_boxplot(notch = FALSE) +
geom_text(data = data_meds, aes(x = locations_name_modern, y = med, label = med), size = 3, vjust = -0.5) +
labs(x="Outlier Location", y =" Number of letters sent from this location to Erasmus per year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35))
plot
require(readr)
require(plyr)
require(ggplot2)
library(readr)
library(plyr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_era_outliers.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# callculate median for label
data_meds <- ddply(data, .(locations_name_modern), summarise, med = median(COUNT))
# create boxplot
plot <- ggplot(data, aes(x = locations_name_modern, y = COUNT)) +
geom_boxplot(notch = FALSE) +
geom_text(data = data_meds, aes(x = locations_name_modern, y = med, label = med), size = 3, vjust = -0.5) +
labs(x="Outlier Location", y =" Number of letters sent from this location to Erasmus per year") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("no_epp_per_loc_sent_to_era_outliers_boxplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_epp_per_loc_sent_to_era_outliers_boxplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_epp_per_loc_sent_to_era_outliers_boxplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_epp_per_loc_sent_to_era_outliers_boxplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_year/comp_no_corr_per_year_to_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create linechart
plot <- ggplot(data=data_long, aes(x= Year, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of correspondents") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,170,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Number of correspondents Erasmus writes to", "Number of correspondents writing to Erasmus"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_year/comp_no_corr_per_year_to_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create linechart
plot <- ggplot(data=data_long, aes(x= Year, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of correspondents") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,170,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Number of correspondents Erasmus writes to", "Number of correspondents writing to Erasmus"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_corr_per_year_to_from_era_linechart.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_year_to_from_era_linechart.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_year_to_from_era_linechart.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_year_to_from_era_linechart.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.title=element_blank()) +
theme(legend.position="bottom")
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank())
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank())
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Number of correspondents Erasmus wrote letters to", "Number of correspondents who wrote letters to Erasmus"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_modern_state/comp_no_corr_per_ms_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"), colClasses=c("Number.of.correspondents.who.received.letters.from.Erasmus"="character","Number.of.correspondents.who.wrote.letters.to.Erasmus"="character"))
# set number columns to numeric
data$Number.of.correspondents.who.received.letters.from.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.received.letters.from.Erasmus))
data$Number.of.correspondents.who.wrote.letters.to.Erasmus <- as.numeric(as.character(data$Number.of.correspondents.who.wrote.letters.to.Erasmus))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Modern.State"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(Modern.State,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Number of correspondents Erasmus wrote letters to", "Number of correspondents who wrote letters to Erasmus"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_corr_per_ms_writing_to_receiving_from_era_barchart.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_ms_writing_to_receiving_from_era_barchart.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_ms_writing_to_receiving_from_era_barchart.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_corr_per_ms_writing_to_receiving_from_era_barchart.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_modern_state/comp_no_epp_from_era_to_ms_and_from_ms_to_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("ModernState"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(ModernState,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom")
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_modern_state/comp_no_epp_from_era_to_ms_and_from_ms_to_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("ModernState"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(ModernState,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Number of letters Erasmus sent to this modern state", "Number of letter sent from this modern state to Erasmus"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_modern_state/comp_no_epp_from_era_to_ms_and_from_ms_to_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("ModernState"))
# create barchart
plot <- ggplot(data_long,aes(x= reorder(ModernState,-value),y=value, fill=variable)) +
geom_bar(position = "dodge", stat = "identity") +
labs(x="Modern State",y="Number of correspondents") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Number of letters Erasmus sent to this modern state", "Number of letter sent from this modern state to Erasmus"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_from_era_to_ms_and_from_ms_to_era_barchart.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_era_to_ms_and_from_ms_to_era_barchart.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_era_to_ms_and_from_ms_to_era_barchart.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_era_to_ms_and_from_ms_to_era_barchart.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
