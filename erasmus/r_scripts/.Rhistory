labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
# geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
# geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/comp_corr_per_loc_writing_to_receiving_from_era.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x=NoCorrFromEra, y=NoCorrToEra, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
geom_text_repel(label=ifelse(data$NoCorrToEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
geom_text_repel(label=ifelse(data$NoCorrFromEra>6,as.character(data$Location.Name.Modern),''), colour = NoCorrToEra) +
labs(x="Number of correspondents receiving letters from Erasmus",y="Number of Correspondents writing letters to Erasmus") +
theme_bw()
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_corr_per_loc_writing_to_receiving_from_era_scatterplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
geom_text(check_overlap = TRUE, aes(label=ifelse(Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus>15,as.character(Location.Name.Modern),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
geom_text(check_overlap = TRUE, aes(label=ifelse(Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus>15,as.character(Location.Name.Modern),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.Location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
geom_text(check_overlap = TRUE, aes(label=ifelse(Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus>15,as.character(Location.Name.Modern),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
geom_text(check_overlap = TRUE, aes(label=ifelse(Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus>15,as.character(Location.Name.Modern),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("no_corr_per_loc_receiving_from_era_pointplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus>6,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents receiving letters from Erasmus")
plot2
# arrange plots
ggarrange(plot, plot2,
ncol = 2, nrow = 1)
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus), y=Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.received.at.this.location.letters.from.Erasmus>6,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents receiving letters from Erasmus")
plot2
# arrange plots
ggarrange(plot, plot2,
ncol = 2, nrow = 1)
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("no_corr_per_loc_receiving_from_era_pointplot_and_boxplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot_and_boxplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot_and_boxplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_receiving_from_era_pointplot_and_boxplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create scatterplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("no_corr_per_loc_writing_to_era_pointplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus>6,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents writing letters to Erasmus")
plot2
# arrange plots
ggarrange(plot, plot2,
ncol = 2, nrow = 1)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_era_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Erasmus") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus>6,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents writing letters to Erasmus")
plot2
# arrange plots
ggarrange(plot, plot2,
ncol = 2, nrow = 1)
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("no_corr_per_loc_writing_to_era_pointplot_and_boxplot.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot_and_boxplot.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot_and_boxplot.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("no_corr_per_loc_writing_to_era_pointplot_and_boxplot.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
str(data)
quantile(data$Number.of.correspondents.who.wrote.from.this.location.letters.to.Erasmus)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_era.csv", fileEncoding="UTF-8")
str(data)
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_era.csv", fileEncoding="UTF-8")
# create potblox
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>3.2925,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters per correspondent sent to Erasmus")
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_era.csv", fileEncoding="UTF-8")
# create potblox
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>3.2925,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters per correspondent sent to Erasmus")
plot
str(data)
View(data)
qunatile(data$Average.Number.of.Letters)
quantile(data$Average.Number.of.Letters)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_era.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>3.2925,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters per correspondent sent to Erasmus")
plot
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_loc_year_written_by_era_at.csv", fileEncoding="UTF-8")
# create potblox
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters.written.by.Erasmus.from.this.location.per.year)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text(check_overlap = TRUE, aes(label=ifelse(Average.Number.of.Letters.written.by.Erasmus.from.this.location.per.year>=14.25,as.character(Location.Name),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average Number of letters sent from location by Erasmus per year")
plot
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data and define data type for date columns
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_era.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>3.2925,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters per correspondent sent to Erasmus")
plot
