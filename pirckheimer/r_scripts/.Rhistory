scale_colour_discrete(labels=c("Number of letters Pirckheimer sent to this modern state", "Number of letters sent from this modern state to Pirckheimer"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_modern_state_year/comp_no_epp_from_pirck_to_ms_and_from_ms_to_pirck_per_year.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("ModernState","Year"))
# create barchart with facet grid
plot <- ggplot(data=data_long, aes(x=Year,y=value, colour=variable)) +
geom_line(stat = "identity") +
labs(x="Year",y="Number of letters") +
scale_x_continuous(breaks = c(1484:1536)) +
facet_grid(ModernState ~ ., space = "free" ) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(strip.text.y = element_text(angle = 0, hjust = 1)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_colour_discrete(labels=c("Number of letters Pirckheimer sent to this modern state", "Number of letters sent from this modern state to Pirckheimer"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_from_pirck_to_ms_and_from_ms_to_pirck_per_year_facet_grid.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_pirck_to_ms_and_from_ms_to_pirck_per_year_facet_grid.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_pirck_to_ms_and_from_ms_to_pirck_per_year_facet_grid.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_from_pirck_to_ms_and_from_ms_to_pirck_per_year_facet_grid.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create linechart
plot <- ggplot(data=data_long, aes(x= Year, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of letters") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,160,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Number of letters with inferred send date", "Number of letters with non-inferred send date"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create linechart
plot <- ggplot(data=data_long, aes(x= Year, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of letters") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,160,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Number of letters with inferred send date", "Number of letters with non-inferred send date"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_per_year_inferred_noninferred_linechart.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_linechart.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_linechart.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_linechart.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
require(scales)
library(readr)
library(reshape2)
library(ggplot2)
library(scales)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred_sent_from_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create stacked barchart
plot <- ggplot(data_long,aes(x=Year,y=value, fill=variable)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
labs(x="Year",y="Number of letters") + scale_x_continuous(breaks = c(1484:1536)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Letters sent from Pirckheimer with inferred send date", "Letters sent from Pirckheimer with non-inferred send date"))
plot
require(readr)
require(reshape2)
require(ggplot2)
require(scales)
library(readr)
library(reshape2)
library(ggplot2)
library(scales)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred_sent_from_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create stacked barchart
plot <- ggplot(data_long,aes(x=Year,y=value, fill=variable)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
labs(x="Year",y="Number of letters") + scale_x_continuous(breaks = c(1484:1536)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Letters sent from Pirckheimer with inferred send date", "Letters sent from Pirckheimer with non-inferred send date"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_from_pirck_barchart_percentage.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_from_pirck_barchart_percentage.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_from_pirck_barchart_percentage.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_from_pirck_barchart_percentage.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
require(scales)
library(readr)
library(reshape2)
library(ggplot2)
library(scales)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred_sent_to_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create stacked barchart
plot <- ggplot(data_long,aes(x=Year,y=value, fill=variable)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
labs(x="Year",y="Number of letters") + scale_x_continuous(breaks = c(1484:1536)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Letters sent to Pirckheimer with inferred send date", "Letters sent to Pirckheimer with non-inferred send date"))
plot
require(readr)
require(reshape2)
require(ggplot2)
require(scales)
library(readr)
library(reshape2)
library(ggplot2)
library(scales)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_inferred_noninferred_sent_to_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("Year"))
# create stacked barchart
plot <- ggplot(data_long,aes(x=Year,y=value, fill=variable)) +
geom_bar(position = "fill", stat = "identity") +
scale_y_continuous(labels = percent_format()) +
labs(x="Year",y="Number of letters") + scale_x_continuous(breaks = c(1484:1536)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_fill_grey(labels = c("Letters sent to Pirckheimer with inferred send date", "Letters sent to Pirckheimer with non-inferred send date"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_to_pirck_barchart_percentage.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_to_pirck_barchart_percentage.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_to_pirck_barchart_percentage.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_inferred_noninferred_sent_to_pirck_barchart_percentage.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_sent_by_to_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("send_date_year1"))
# create linechart
plot <- ggplot(data=data_long, aes(x= send_date_year1, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of letters") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,160,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Letters sent from Pirckheimer", "Letters sent to Pirckheimer"))
plot
require(readr)
require(reshape2)
require(ggplot2)
library(readr)
library(reshape2)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_year/comp_no_epp_per_year_sent_by_to_pirck.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# apply melt for wide to long
data_long <- melt(data, id.vars= c("send_date_year1"))
# create linechart
plot <- ggplot(data=data_long, aes(x= send_date_year1, y=value, colour=variable)) +
geom_line(stat = "identity", size=0.9) +
geom_point(shape=1) + labs(x="Year",y="Number of letters") +
scale_x_continuous(breaks = c(1484:1536)) +
scale_y_continuous(breaks = seq(0,160,10)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.35)) +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
scale_color_grey(labels = c("Letters sent from Pirckheimer", "Letters sent to Pirckheimer"))
plot
# change working directory
getwd()
setwd("../r_plots/")
# save plot in multiple formats
ggsave("comp_no_epp_per_year_sent_by_to_pirck_linechart.pdf", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_sent_by_to_pirck_linechart.png", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_sent_by_to_pirck_linechart.eps", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
ggsave("comp_no_epp_per_year_sent_by_to_pirck_linechart.svg", plot = last_plot(), scale = 1, width = 11.7, height = 8.3, units = "in", dpi = 600, limitsize = TRUE)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_written_by_pirck_at.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Number.of.letters.sent.from.this.location.from.Pirckheimer)) +
geom_boxplot(outlier.size=2, notch = FALSE, show.legend = TRUE) +
geom_text_repel(label=ifelse(data$Number.of.letters.sent.from.this.location.from.Pirckheimer>17.25,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of letters sent from this location by Pirckheimer")
plot
summary(data)
require(readr)
require(ggplot2)
library(readr)
library(ggplot2)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/avg_no_epp_per_loc_year_written_by_pirck_at.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.number.of.letters.written.by.Pirckheimer.from.this.location.per.year)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text(check_overlap = TRUE, aes(label=ifelse(Average.number.of.letters.written.by.Pirckheimer.from.this.location.per.year>=8.8125,as.character(Location.Name),'')),hjust=-0.1,vjust=0) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters sent from this location by Pirckheimer per year")
plot
summary(data)
data§Average.number.of.letters.written.by.Pirckheimer.from.this.location.per.year
data$Average.number.of.letters.written.by.Pirckheimer.from.this.location.per.year
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_by_pirck_to.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Number.of.letters.sent.to.this.location.from.Pirckheimer)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.letters.sent.to.this.location.from.Pirckheimer>11,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of letters sent from Pirckheimer to this location")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/avg_no_epp_per_loc_year_written_by_pirck_to.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.number.of.letters.written.by.Pirckheimer.to.this.location.per.year)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.number.of.letters.written.by.Pirckheimer.to.this.location.per.year>2.25,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters sent from Pirckheimer to this location per year")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/no_epp_per_loc_sent_to_pirck.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Number.of.letters.sent.from.this.location.to.Pirckheimer)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.letters.sent.from.this.location.to.Pirckheimer>8.5,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of letters sent from this location to Pirckheimer")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/avg_no_epp_per_loc_year_written_to_pirck.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.number.of.letters.written.from.this.location.to.Pirckheimer.per.year)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.number.of.letters.written.from.this.location.to.Pirckheimer.per.year>3.5,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters sent to Pirckheimer from this location per year")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_to_pirck.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>3.5,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters sent to Pirckheimer from this location per correspondent")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_epp_per_loc/avg_no_epp_per_corr_loc_written_by_pirck_to.csv", fileEncoding="UTF-8")
# create boxplot
plot <- ggplot(data, aes(x= ' ', y = Average.Number.of.Letters)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Average.Number.of.Letters>4.3325,as.character(data$Location.Name),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Average number of letters sent from Pirckheimer to this location per correspondent")
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
library(readr)
library(ggplot2)
library(ggrepel)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_pirck_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Pirckheimer") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_writing_to_pirck_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer), y=Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents writing letters to Pirckheimer") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.wrote.from.this.location.letters.to.Pirckheimer>3.5,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents writing letters to Pirckheimer")
plot2
summary(data)
require(readr)
require(ggplot2)
require(ggrepel)
require(ggpubr)
library(readr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
# set working directory
getwd()
setwd("../query_results/")
# read data
data<-read.csv("no_corr_per_loc/no_corr_per_loc_receiving_from_pirck_with_geocoordinates.csv", fileEncoding="UTF-8", na.strings=c("NULL"))
# create pointplot
plot <- ggplot(data=data, aes(x= reorder(Location.Name.Modern, -Number.of.correspondents.who.received.at.this.Location.letters.from.Pirckheimer), y=Number.of.correspondents.who.received.at.this.Location.letters.from.Pirckheimer, label=Location.Name.Modern)) +
geom_point(stat = "identity") +
labs(x="Locations",y="Number of correspondents receiving letters from Pirckheimer") +
theme_bw() +
theme(axis.title.x=element_text(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
plot
# create boxplot
plot2 <- ggplot(data, aes(x= ' ', y = Number.of.correspondents.who.received.at.this.Location.letters.from.Pirckheimer)) +
geom_boxplot(outlier.size=2, notch = FALSE) +
geom_text_repel(label=ifelse(data$Number.of.correspondents.who.received.at.this.Location.letters.from.Pirckheimer>6,as.character(data$Location.Name.Modern),'')) +
theme_bw() +
theme(axis.title.x=element_blank()) +
labs(y = "Number of correspondents receiving letters from Pirckheimer")
plot2
# arrange plots
ggarrange(plot, plot2,
ncol = 2, nrow = 1)
summary(data)
