name: era-query-db

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Runner MySQL Server Status (i.e. Ubuntu)
        run: |
          if sudo systemctl is-active mysql.service; then
            echo "Local MySQL server is running."
          else
            echo "Local MySQL server is not running."
          fi
        continue-on-error: true
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose

      - name: Start Docker Compose
        run: |
          docker-compose -f .github/workflows/docker_compose_era_query_db.yml up -d
        working-directory: ${{ github.workspace }}

      - name: Check MySQL Server Status inside container
        run: |
          docker exec -i mysql mysqladmin ping --silent
          if [ $? -eq 0 ]; then
            echo "MySQL server is running."
          else
            echo "MySQL server is not running."
          exit 1
          fi
      
      - name: Check MySQL Container Status on Runner
        run: |
          docker ps | grep mysql
        continue-on-error: true  # Continue even if the container is not found

      - name: Ingest SQL dump
        run: |
          # Navigate to the directory where the SQL dump is located
          cd ${{ github.workspace }}/erasmus/database/dump

          # Ingest the SQL dump into the MySQL database
          mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql --default-character-set=utf8 --database=era_cdb_v3 < era_cdb_v3_dump.sql

      - name: Run SQL queries and create CSV files
        run: |
          # Navigate to the directory where the .sql files are located
          cd ${{ github.workspace }}/erasmus/sql_queries

          # Loop through .sql files and execute them
          for file in check_scripts/*.sql corpus_overview/*.sql create_geolayout_files_for_gephi/nodes_edges_for_epp_sent_by_era/*.sql create_geolayout_files_for_gephi/nodes_egdes_for_epp_sent_to_era/*.sql create_geolayout_files_for_gephi/nodes_edges_for_epp_from_era_to_nausea/*.sql create_geolayout_files_for_gephi/nodes_edges_for_epp_from_era_to_venice/*.sql create_geom_edges/*.sql fragmentation_of_correspondents/*.sql fragmentation_of_locations/*.sql no_corr_per_loc/*.sql no_corr_per_modern_state/*.sql no_epp_per_correspondent/*.sql no_epp_per_modern_state/*.sql no_epp_per_modern_state_year/*.sql no_epp_per_year/*.sql no_epp_per_loc/*.sql duration_of_correspondence/*.sql enrich_epp_with_geocoordinates/*.sql no_corr_per_year/*.sql
          do
            mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql --default-character-set=utf8 --database=era_cdb_v3 < "$file" | sed 's/\t/","/g;s/^/"/;s/$/"/;' > query_results/"${file%.sql}.csv"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: query_results
          path: query_results/*
